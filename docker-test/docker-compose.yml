services:
  # 1. MySQL 服务（已正常运行，不用改）
  mysql-test:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: 123456  # 和你重建数据库时的密码一致
      MYSQL_DATABASE: db_project_test  # 和你重建的数据库名一致
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 2. 后端服务（关键！必须加这部分，之前可能删了）
  backend-test:
    build: E:\node\db-app-backend  # 必须是你后端项目的真实路径（比如你的后端在这，就不用改）
    container_name: flask-backend
    ports:
      - "5000:5000"  # 端口映射：本地5000 → 容器5000（接口访问用这个端口）
    depends_on:
      mysql-test:
        condition: service_healthy  # 等MySQL健康后再启动后端，避免连不上
    restart: always
    environment:
      # 后端连接MySQL的参数（必须和上面mysql-test的配置一致）
      MYSQL_HOST: mysql-db  # 用MySQL容器名（不是localhost！）
      MYSQL_PORT: 3306      # 容器内的MySQL端口（不是映射的3307）
      MYSQL_USER: root
      MYSQL_PASSWORD: 123456
      MYSQL_DB: db_project_test

  # 3. 前端服务（已正常运行，不用改）
  frontend-test:
    build: E:\node\db-app-frontend
    container_name: vue-frontend
    ports:
      - "8080:80"
    depends_on:
      backend-test:
        condition: service_started  # 等后端启动后再启动前端
    restart: always

# 数据卷（保存MySQL数据，不用改）
volumes:
  mysql-data: